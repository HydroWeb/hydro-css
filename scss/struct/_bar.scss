// Settings
// ========

$bar-on: $output-styles !default;
$bar-name: module('bar') !default;
$bar-item-name: module('item') !default;

$bar-h-gaps: $base-gutters !default;
$bar-v-gaps: $base-gutters !default;

$bar-breakpoints: $base-breakpoints !default;


// Module
// ======

@if $bar-on
{
	#{$bar-name} {
		@extend %structure;
		@extend %structure-gaps;

		// This feature is only available in browsers that support flexbox (IE10+)
		> #{parameter('fill')} {
			flex-grow: 1;
		}

		@each $breakpoint-name, $breakpoint-value in $bar-breakpoints
		{
			@include over($breakpoint-value)
			{
				@include parameter('fitted', $breakpoint-name) {
					// TODO extend flexbox
					display: table;
					border-collapse: collapse;
					width: 100%;

					> * {
						display: table-cell;

						@include parameter('fit') {
							width: 1px;
							white-space: nowrap;

							> * {
								white-space: normal;
							}
						}

						@include parameter('compress') {
							width: 1px;
						}
					}

					@include parameter('h-align', 'justify') {

						&:after {
							content: none;
							display: none;
						}
					}

					@each $gap-name, $gap-value in $bar-h-gaps
					{
						@include parameter('h-gap', $gap-name) {
							margin-left: 0;
							margin-right: 0;

							> * {
								border-left-width: $gap-value;
								border-right-width: 0;
							}

							> :first-child {
								border-left-width: 0;
							}

							@include parameter('h-outer-gap') {

								> * {
									border-left-width: $gap-value;
									border-right-width: $gap-value;
								}
							}
						}

						@include parameter('v-gap', $gap-name) {
							margin-top: 0;

							@include parameter('v-outer-gap') {

								> * {
									border-top: $gap-value solid transparent;
									border-bottom: $gap-value solid transparent;
								}
							}
						}
					}
				}
			}
		}
	}
}