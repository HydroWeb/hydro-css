// Settings
// ========

$alignbox-on: $output-styles !default;
$alignbox-name: module('alignbox') !default;
$alignbox-box-name: module('box') !default;


// Mixins
// ======

@mixin alignbox($h-align: center, $v-align: center)
{
	@include flexbox;
	@include flex-flow(row nowrap);

	position: relative;
	width: 100%; // To stop other flex elements from messing with it

	@if $h-align == left
	{
		@include justify-content(flex-start);
		text-align: left;
	}
	@else if $h-align == right
	{
		@include justify-content(flex-end);
		text-align: right;
	}
	@else
	{
		@include justify-content(center);
		text-align: center;
	}

	@if $v-align == top
	{
		@include align-items(flex-start);
		&:after, > * { vertical-align: top !important; }
	}
	@else if $v-align == bottom
	{
		@include align-items(flex-end);
		&:after, > * { vertical-align: bottom !important; }
	}
	@else
	{
		@include align-items(center);
		&:after, > * { vertical-align: middle !important; }
	}

	white-space: nowrap;
	overflow: hidden;

	// Non-flexbox inline-block hack
	// http://stackoverflow.com/a/13075912/556609
	&:after {
		display: inline-block;
		content: '';
		height: 100%;
		width: 0;
	}
}

@mixin alignbox-box($fix: none)
{
	text-align: inherit;
	white-space: normal;

	@if $fix == top or $fix == bottom
	{
		display: block;
		position: absolute;
		left: 0; right: 0;
		#{$fix}: 0;
	}
	@else
	{
		display: inline-block;
	}
}


// Module
// ======

@if $alignbox-on
{
	#{$alignbox-name} {
		@extend %flexbox;

		@include flex-flow(row nowrap);
		@include justify-content(center);
		@include align-items(center);

		width: 100%; // To stop other flex elements from messing with it
		position: relative;
		text-align: center;
		white-space: nowrap;
		overflow: hidden;

		// Non-flexbox inline-block hack
		// http://stackoverflow.com/a/13075912/556609
		&:after {
			display: inline-block;
			content: '';
			height: 100%;
			vertical-align: middle;
			width: 0;
		}

		// Target wildcard (*) as wildcard selectors have the lowest specifity and will not override any settings that
		// are applied to any other selector. Then target .box as it WILL override other selectors, which is fine as by
		// applying the .box selector the element you are explicitly setting these properties rather than implicitly.

		> *,
		> .box {
			display: inline-block;
			vertical-align: middle;
			text-align: left;
			white-space: normal;
		}

		> .box {
			text-align: inherit;

			&#{parameter('fix', 'top')},
			&#{parameter('fix', 'bottom')} {
				display: block;
				position: absolute;
				left: 0; right: 0;
			}

			@include parameter('fix', 'top') {
				top: 0;
			}

			@include parameter('fix', 'bottom') {
				bottom: 0;
			}
		}

		// Alignment parameters

		@include parameter('h-align', 'left') {
			@include justify-content(flex-start);
			text-align: left;
		}

		@include parameter('h-align', 'center') {
			@include justify-content(center);
			text-align: center;
		}

		@include parameter('h-align', 'right') {
			@include justify-content(flex-end);
			text-align: right;
		}

		@include parameter('v-align', 'top') {
			@include align-items(flex-start);
			&:after, > * { vertical-align: top; }
		}

		@include parameter('v-align', 'center') {
			@include align-items(center);
			&:after, > * { vertical-align: middle; }
		}

		@include parameter('v-align', 'bottom') {
			@include align-items(flex-end);
			&:after, > * { vertical-align: bottom; }
		}
	}
}