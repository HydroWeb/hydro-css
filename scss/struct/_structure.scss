@mixin structure-gaps($h-gaps: $base-gutters, $v-gaps: $base-gutters)
{
	@each $gap-name, $gap-value in $h-gaps
	{
		$gap-half: ($gap-value / 2);

		@include parameter('h-gap', $gap-name) {
			margin-left: -$gap-half;
			margin-right: -$gap-half;

			@include parameter('h-outer-gap') {
				margin-left: 0;
				margin-right: 0;
				padding-left: $gap-half;
				padding-right: $gap-half;
			}

			> * {
				border-left: $gap-half solid transparent;
				border-right: $gap-half solid transparent;
			}
		}
	}

	> * {
		background-clip: padding-box;
	}

	@each $gap-name, $gap-value in $v-gaps
	{
		@include parameter('v-gap', $gap-name) {
			margin-top: -$gap-value;

			@include parameter('v-outer-gap') {
				margin-top: 0;
				padding-top: 0;
				padding-bottom: $gap-value;
			}

			> * {
				margin-top: $gap-value;
			}
		}
	}
}


%structure {
	@extend %flexbox;
	@include flex-flow(row wrap);
	@include justify-content(flex-start);
	@include align-items(flex-start);

	pointer-events: none; // Negative margins mouse event fix
	word-spacing: -1em; // Remove spacing between items
	text-align: left;

	> * {
		display: inline-block;
		vertical-align: top;
		word-spacing: normal;
		width: auto;
		min-height: 1px; // Fix for empty blocks
		pointer-events: auto; // Negative margins mouse event fix
		text-align: left;
	}

	@include parameter('reversed') {
		// @include flex-direction(row-reverse); // Not needed if direction is set
		@include justify-content(flex-end);

		text-align: right;

		// Hacky way of reversing the items. Could possibly break stuff.
		// TODO Test thoroughly!
		direction: rtl;

		> *,
		> :before,
		> :after {
			direction: ltr;
		}
	}

	&#{parameter('h-align', 'right')}#{parameter('reversed')},
	&#{parameter('h-align', 'left')} {
		@include justify-content(flex-start);
		text-align: left;
	}

	@include parameter('h-align', 'center') {
		@include justify-content(center);
		text-align: center;
	}

	&#{parameter('h-align', 'left')}#{parameter('reversed')},
	&#{parameter('h-align', 'right')} {
		@include justify-content(flex-end);
		text-align: right;
	}

	@include parameter('h-align', 'justify') {
		@include justify-content(space-between);
		text-align: justify;

		&:after {
			content: '';
			display: inline-block;
			width: 100%;
			height: 0;
		}
	}

	@include parameter('v-align', 'top') {
		@include align-items(flex-start);
		> * { vertical-align: top; }
	}

	@include parameter('v-align', 'center') {
		@include align-items(center);
		> * { vertical-align: middle; }
	}

	@include parameter('v-align', 'bottom') {
		@include align-items(flex-end);
		> * { vertical-align: bottom; }
	}

	@include parameter('v-align', 'fill') {
		@include align-items(stretch);
	}
}

ul,
ol {
	&%structure {
		margin: 0;
		padding: 0;

		> li {
			list-style: none;
		}
	}
}


%structure-gaps {
	@include structure-gaps;
}