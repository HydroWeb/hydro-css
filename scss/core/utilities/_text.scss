////
/// Text utilities
/// @group core-utilities
/// @author Benjamin Fleming
////


// Settings
// --------

/// Controls whether styles in this file (text) are generated.
/// @type Boolean
$hf-generate-text: $hf-generate !default;


// Asserts
// -------

@include hf-assert($hf-generate-text, 'bool');


// Mixins
// ------

/// Turns an element into a textbox
/// @require {function} hf-shorthand
/// @require {function} hf-sum
/// @param {Number} $font-size [1em]
/// @param {Number | List} $padding [0]
/// @param {Number | List} $border-width [0]
/// @param {Number} $line-height [1]
/// @param {Boolean} $multiline [false]
/// @output
@mixin hf-textbox(
	$font-size: 1em,
	$padding: 0,
	$border-width: 0,
	$line-height: 1,
	$multiline: false
) {
	$line-height: if($multiline, $line-height, 1);

	//
	// Calculate the line height offset
	//

	@if $line-height != 1 and $line-height != 1em and $line-height != 100% {
		$lh: $line-height * if(unitless($line-height), 1em, 1);

		$p-top:    hf-shorthand($padding, top);
		$p-right:  hf-shorthand($padding, right);
		$p-bottom: hf-shorthand($padding, bottom);
		$p-left:   hf-shorthand($padding, left);
		$lh-bleed: ($font-size / 2), ($lh / -2);

		// Add a fallback for browsers that don't support CSS3 calc()
		$p-top-fb:    hf-sum((unit($p-top): $font-size), $p-top, $lh-bleed);
		$p-bottom-fb: hf-sum((unit($p-bottom): $font-size), $p-bottom, $lh-bleed);
		padding: $p-top-fb $p-right $p-bottom-fb $p-left;

		$p-top:    hf-sum('calc', $p-top, $lh-bleed);
		$p-bottom: hf-sum('calc', $p-bottom, $lh-bleed);

		$padding: $p-top $p-right $p-bottom $p-left;
	}

	//
	// Apply styles
	//

	font-size: $font-size;
	padding: $padding;
	border-width: $border-width;
	// Assign this as usually this is what is wanted, though it can be overridden.
	border-style: solid;
	line-height: $line-height;

	//
	// Apply single line styles
	//

	@if not $multiline {
		$p-top: hf-shorthand($padding, top);
		$p-bottom: hf-shorthand($padding, bottom);
		$bw-top: hf-shorthand($border-width, top);
		$bw-bottom: hf-shorthand($border-width, bottom);

		$height-values: (
			$p-top, $p-bottom,
			$bw-top, $bw-bottom,
			$line-height * 1em
		);

		overflow: hidden;
		// Assume padding is dominant, so prioritize its unit.
		height: hf-sum( (unit($p-top): $font-size), $height-values);
		height: hf-sum('calc', $height-values);
		white-space: nowrap;
		text-overflow: ellipsis;
	}
}


// Styles
// ------

@if $hf-generate-text {

	@each $text-align in left, center, right, justify {

		@include hf-utility('text-' + $text-align) {
			text-align: $text-align !important;
		}
	}

	@include hf-utility('truncate') {
		overflow: hidden !important;
		max-width: 100% !important;
		white-space: nowrap !important;
		text-overflow: ellipsis !important;
	}

	@include hf-utility('uppercase') {
		text-transform: uppercase !important;
	}

	@include hf-utility('lowercase') {
		text-transform: lowercase !important;
	}
}
